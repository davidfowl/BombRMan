/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@microsoft/signalr@6.0.4/dist/esm/JsonHubProtocol.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{MessageType}from"./IHubProtocol";import{LogLevel}from"./ILogger";import{TransferFormat}from"./ITransport";import{NullLogger}from"./Loggers";import{TextMessageFormat}from"./TextMessageFormat";const JSON_HUB_PROTOCOL_NAME="json";export class JsonHubProtocol{constructor(){this.name="json",this.version=1,this.transferFormat=TransferFormat.Text}parseMessages(e,o){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===o&&(o=NullLogger.instance);const t=TextMessageFormat.parse(e),r=[];for(const e of t){const t=JSON.parse(e);if("number"!=typeof t.type)throw new Error("Invalid payload.");switch(t.type){case MessageType.Invocation:this._isInvocationMessage(t);break;case MessageType.StreamItem:this._isStreamItemMessage(t);break;case MessageType.Completion:this._isCompletionMessage(t);break;case MessageType.Ping:case MessageType.Close:break;default:o.log(LogLevel.Information,"Unknown message type '"+t.type+"' ignored.");continue}r.push(t)}return r}writeMessage(e){return TextMessageFormat.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,o){if("string"!=typeof e||""===e)throw new Error(o)}}
//# sourceMappingURL=/sm/fd51a32ecc41f23164e9bd53eda09c981f51073d4695025190de893f021dec29.map