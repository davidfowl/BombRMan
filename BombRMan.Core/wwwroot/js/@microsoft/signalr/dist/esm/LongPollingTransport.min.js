/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@microsoft/signalr@6.0.4/dist/esm/LongPollingTransport.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{AbortController}from"./AbortController";import{HttpError,TimeoutError}from"./Errors";import{HeaderNames}from"./HeaderNames";import{LogLevel}from"./ILogger";import{TransferFormat}from"./ITransport";import{Arg,getDataDetail,getUserAgentHeader,sendMessage}from"./Utils";export class LongPollingTransport{constructor(e,t,o,r){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._pollAbort=new AbortController,this._options=r,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(Arg.isRequired(e,"url"),Arg.isRequired(t,"transferFormat"),Arg.isIn(t,TransferFormat,"transferFormat"),this._url=e,this._logger.log(LogLevel.Trace,"(LongPolling transport) Connecting."),t===TransferFormat.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,r]=getUserAgentHeader(),s={[o]:r,...this._options.headers},n={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};t===TransferFormat.Binary&&(n.responseType="arraybuffer");const i=await this._getAccessToken();this._updateHeaderToken(n,i);const l=`${e}&_=${Date.now()}`;this._logger.log(LogLevel.Trace,`(LongPolling transport) polling: ${l}.`);const a=await this._httpClient.get(l,n);200!==a.statusCode?(this._logger.log(LogLevel.Error,`(LongPolling transport) Unexpected response code: ${a.statusCode}.`),this._closeError=new HttpError(a.statusText||"",a.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,n)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){e.headers||(e.headers={}),t?e.headers[HeaderNames.Authorization]=`Bearer ${t}`:e.headers[HeaderNames.Authorization]&&delete e.headers[HeaderNames.Authorization]}async _poll(e,t){try{for(;this._running;){const o=await this._getAccessToken();this._updateHeaderToken(t,o);try{const o=`${e}&_=${Date.now()}`;this._logger.log(LogLevel.Trace,`(LongPolling transport) polling: ${o}.`);const r=await this._httpClient.get(o,t);204===r.statusCode?(this._logger.log(LogLevel.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==r.statusCode?(this._logger.log(LogLevel.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),this._closeError=new HttpError(r.statusText||"",r.statusCode),this._running=!1):r.content?(this._logger.log(LogLevel.Trace,`(LongPolling transport) data received. ${getDataDetail(r.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(r.content)):this._logger.log(LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this._running?e instanceof TimeoutError?this._logger.log(LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=e,this._running=!1):this._logger.log(LogLevel.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}}finally{this._logger.log(LogLevel.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?sendMessage(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(LogLevel.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(LogLevel.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,o]=getUserAgentHeader();e[t]=o;const r={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},s=await this._getAccessToken();this._updateHeaderToken(r,s),await this._httpClient.delete(this._url,r),this._logger.log(LogLevel.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(LogLevel.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(LogLevel.Trace,e),this.onclose(this._closeError)}}}
//# sourceMappingURL=/sm/cc9868fb94f89602fbdce9185dd63c63d9d30886abdf0978cfbecd9d489f2924.map