/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@microsoft/signalr@6.0.4/dist/cjs/LongPollingTransport.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LongPollingTransport=void 0;const AbortController_1=require("./AbortController"),Errors_1=require("./Errors"),HeaderNames_1=require("./HeaderNames"),ILogger_1=require("./ILogger"),ITransport_1=require("./ITransport"),Utils_1=require("./Utils");class LongPollingTransport{constructor(e,t,o,r){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._pollAbort=new AbortController_1.AbortController,this._options=r,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(Utils_1.Arg.isRequired(e,"url"),Utils_1.Arg.isRequired(t,"transferFormat"),Utils_1.Arg.isIn(t,ITransport_1.TransferFormat,"transferFormat"),this._url=e,this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Connecting."),t===ITransport_1.TransferFormat.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,r]=Utils_1.getUserAgentHeader(),s={[o]:r,...this._options.headers},n={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};t===ITransport_1.TransferFormat.Binary&&(n.responseType="arraybuffer");const i=await this._getAccessToken();this._updateHeaderToken(n,i);const l=`${e}&_=${Date.now()}`;this._logger.log(ILogger_1.LogLevel.Trace,`(LongPolling transport) polling: ${l}.`);const g=await this._httpClient.get(l,n);200!==g.statusCode?(this._logger.log(ILogger_1.LogLevel.Error,`(LongPolling transport) Unexpected response code: ${g.statusCode}.`),this._closeError=new Errors_1.HttpError(g.statusText||"",g.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,n)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){e.headers||(e.headers={}),t?e.headers[HeaderNames_1.HeaderNames.Authorization]=`Bearer ${t}`:e.headers[HeaderNames_1.HeaderNames.Authorization]&&delete e.headers[HeaderNames_1.HeaderNames.Authorization]}async _poll(e,t){try{for(;this._running;){const o=await this._getAccessToken();this._updateHeaderToken(t,o);try{const o=`${e}&_=${Date.now()}`;this._logger.log(ILogger_1.LogLevel.Trace,`(LongPolling transport) polling: ${o}.`);const r=await this._httpClient.get(o,t);204===r.statusCode?(this._logger.log(ILogger_1.LogLevel.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==r.statusCode?(this._logger.log(ILogger_1.LogLevel.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),this._closeError=new Errors_1.HttpError(r.statusText||"",r.statusCode),this._running=!1):r.content?(this._logger.log(ILogger_1.LogLevel.Trace,`(LongPolling transport) data received. ${Utils_1.getDataDetail(r.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(r.content)):this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this._running?e instanceof Errors_1.TimeoutError?this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=e,this._running=!1):this._logger.log(ILogger_1.LogLevel.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}}finally{this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?Utils_1.sendMessage(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(ILogger_1.LogLevel.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,o]=Utils_1.getUserAgentHeader();e[t]=o;const r={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},s=await this._getAccessToken();this._updateHeaderToken(r,s),await this._httpClient.delete(this._url,r),this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(ILogger_1.LogLevel.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(ILogger_1.LogLevel.Trace,e),this.onclose(this._closeError)}}}exports.LongPollingTransport=LongPollingTransport;
//# sourceMappingURL=/sm/dcfda5e55c486e9ca13f65f98ebcec85beef8e3d8b332fcc2e444320477f2650.map