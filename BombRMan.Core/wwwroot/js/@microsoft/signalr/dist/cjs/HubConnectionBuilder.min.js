/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@microsoft/signalr@6.0.4/dist/cjs/HubConnectionBuilder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.HubConnectionBuilder=void 0;const DefaultReconnectPolicy_1=require("./DefaultReconnectPolicy"),HttpConnection_1=require("./HttpConnection"),HubConnection_1=require("./HubConnection"),ILogger_1=require("./ILogger"),JsonHubProtocol_1=require("./JsonHubProtocol"),Loggers_1=require("./Loggers"),Utils_1=require("./Utils"),LogLevelNameMapping={trace:ILogger_1.LogLevel.Trace,debug:ILogger_1.LogLevel.Debug,info:ILogger_1.LogLevel.Information,information:ILogger_1.LogLevel.Information,warn:ILogger_1.LogLevel.Warning,warning:ILogger_1.LogLevel.Warning,error:ILogger_1.LogLevel.Error,critical:ILogger_1.LogLevel.Critical,none:ILogger_1.LogLevel.None};function parseLogLevel(e){const o=LogLevelNameMapping[e.toLowerCase()];if(void 0!==o)return o;throw new Error(`Unknown log level: ${e}`)}class HubConnectionBuilder{configureLogging(e){if(Utils_1.Arg.isRequired(e,"logging"),isLogger(e))this.logger=e;else if("string"==typeof e){const o=parseLogLevel(e);this.logger=new Utils_1.ConsoleLogger(o)}else this.logger=new Utils_1.ConsoleLogger(e);return this}withUrl(e,o){return Utils_1.Arg.isRequired(e,"url"),Utils_1.Arg.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof o?{...this.httpConnectionOptions,...o}:{...this.httpConnectionOptions,transport:o},this}withHubProtocol(e){return Utils_1.Arg.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new DefaultReconnectPolicy_1.DefaultReconnectPolicy(e):this.reconnectPolicy=e:this.reconnectPolicy=new DefaultReconnectPolicy_1.DefaultReconnectPolicy,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const o=new HttpConnection_1.HttpConnection(this.url,e);return HubConnection_1.HubConnection.create(o,this.logger||Loggers_1.NullLogger.instance,this.protocol||new JsonHubProtocol_1.JsonHubProtocol,this.reconnectPolicy)}}function isLogger(e){return void 0!==e.log}exports.HubConnectionBuilder=HubConnectionBuilder;
//# sourceMappingURL=/sm/9c45c9d3b076f8b955b45b2c0aaa55e616e847bc330d6090309f0b94c6480231.map