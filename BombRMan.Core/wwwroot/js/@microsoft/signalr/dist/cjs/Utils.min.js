/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@microsoft/signalr@6.0.4/dist/cjs/Utils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getGlobalThis=exports.getErrorString=exports.constructUserAgent=exports.getUserAgentHeader=exports.ConsoleLogger=exports.SubjectSubscription=exports.createLogger=exports.sendMessage=exports.isArrayBuffer=exports.formatArrayBuffer=exports.getDataDetail=exports.Platform=exports.Arg=exports.VERSION=void 0;const ILogger_1=require("./ILogger"),Loggers_1=require("./Loggers");exports.VERSION="6.0.4";class Arg{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,r){if(!(e in t))throw new Error(`Unknown ${r} value: ${e}.`)}}exports.Arg=Arg;class Platform{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&void 0===window.document}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function getDataDetail(e,t){let r="";return isArrayBuffer(e)?(r=`Binary data of length ${e.byteLength}`,t&&(r+=`. Content: '${formatArrayBuffer(e)}'`)):"string"==typeof e&&(r=`String data of length ${e.length}`,t&&(r+=`. Content: '${e}'`)),r}function formatArrayBuffer(e){const t=new Uint8Array(e);let r="";return t.forEach((e=>{r+=`0x${e<16?"0":""}${e.toString(16)} `})),r.substr(0,r.length-1)}function isArrayBuffer(e){return e&&"undefined"!=typeof ArrayBuffer&&(e instanceof ArrayBuffer||e.constructor&&"ArrayBuffer"===e.constructor.name)}async function sendMessage(e,t,r,o,s,n,i){let a={};if(s){const e=await s();e&&(a={Authorization:`Bearer ${e}`})}const[g,c]=getUserAgentHeader();a[g]=c,e.log(ILogger_1.LogLevel.Trace,`(${t} transport) sending data. ${getDataDetail(n,i.logMessageContent)}.`);const u=isArrayBuffer(n)?"arraybuffer":"text",l=await r.post(o,{content:n,headers:{...a,...i.headers},responseType:u,timeout:i.timeout,withCredentials:i.withCredentials});e.log(ILogger_1.LogLevel.Trace,`(${t} transport) request complete. Response status: ${l.statusCode}.`)}function createLogger(e){return void 0===e?new ConsoleLogger(ILogger_1.LogLevel.Information):null===e?Loggers_1.NullLogger.instance:void 0!==e.log?e:new ConsoleLogger(e)}exports.Platform=Platform,exports.getDataDetail=getDataDetail,exports.formatArrayBuffer=formatArrayBuffer,exports.isArrayBuffer=isArrayBuffer,exports.sendMessage=sendMessage,exports.createLogger=createLogger;class SubjectSubscription{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch((e=>{}))}}exports.SubjectSubscription=SubjectSubscription;class ConsoleLogger{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const r=`[${(new Date).toISOString()}] ${ILogger_1.LogLevel[e]}: ${t}`;switch(e){case ILogger_1.LogLevel.Critical:case ILogger_1.LogLevel.Error:this.out.error(r);break;case ILogger_1.LogLevel.Warning:this.out.warn(r);break;case ILogger_1.LogLevel.Information:this.out.info(r);break;default:this.out.log(r)}}}}function getUserAgentHeader(){let e="X-SignalR-User-Agent";return Platform.isNode&&(e="User-Agent"),[e,constructUserAgent(exports.VERSION,getOsName(),getRuntime(),getRuntimeVersion())]}function constructUserAgent(e,t,r,o){let s="Microsoft SignalR/";const n=e.split(".");return s+=`${n[0]}.${n[1]}`,s+=` (${e}; `,s+=t&&""!==t?`${t}; `:"Unknown OS; ",s+=`${r}`,s+=o?`; ${o}`:"; Unknown Runtime Version",s+=")",s}function getOsName(){if(!Platform.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function getRuntimeVersion(){if(Platform.isNode)return process.versions.node}function getRuntime(){return Platform.isNode?"NodeJS":"Browser"}function getErrorString(e){return e.stack?e.stack:e.message?e.message:`${e}`}function getGlobalThis(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("could not find global")}exports.ConsoleLogger=ConsoleLogger,exports.getUserAgentHeader=getUserAgentHeader,exports.constructUserAgent=constructUserAgent,exports.getErrorString=getErrorString,exports.getGlobalThis=getGlobalThis;
//# sourceMappingURL=/sm/a688e117319e94b9795a735cb8519f409715dbc9e1c1b5cee32869f158769b34.map